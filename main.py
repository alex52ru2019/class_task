# Задача: Создай класс Task, который позволяет управлять задачами (делами).
# У задачи должны быть атрибуты: описание задачи, срок выполнения и статус
# (выполнено/не выполнено). Реализуй функцию для добавления задач, отметки
# выполненных задач и вывода списка текущих (не выполненных) задач.

class my_Task: # класс задачи
    def __init__(self):
        self.dict_task = {} # словарь дел формат {дата : {дело_1: статус, дело_2: статус...}}

        ############### НЕ ИСПОЛЬЗУЮ #################################
        self.zadacha = ""  # описание задачи
        self.date = "" # срок выполнения
        self.status_task = False # статус (выполнено/не выполнено)
        ##############################################################

    def add_task(self, date, zadacha):     # добавление задач
        if self.dict_task.get(date) != None: # если нет задач на выбранную дату
            self.dict_task[date][zadacha]=False # добавляю задачу
        else:  # если нет задач на выбранную дату
            self.dict_task.update({date: {zadacha: False}}) # добавляю задачу
        #print(self.dict_task)

    def done_task(self, date, zadacha):  # отметка выполненных задач
        self.dict_task[date][zadacha] = True # отметка
       # print(self.dict_task)

     #   вывод списка выполненных задач
    def list_done_task(self):
        dict_done = {} # словарь выполненных дел формат {дата : {дело: статус, дело: статус...}}
        for i in self.dict_task: # цикл по датам
            for j in self.dict_task[i]: # цикл по делам
                if self.dict_task[i][j] == True: # емли статус выполенно
                    if dict_done.get(i) != None: # если есть задачи в dict_done на выбранную дату
                        dict_done[i][j] = "выполненно" # добавляю в словарь
                    else: # если нет задач в dict_done на выбранную дату
                        dict_done.update({i: {j: "выполненно"}}) # добавляю в словарь
        print(f"выполненные задачи {dict_done}")

     #   вывод списка не выполненных задач
    def list_undone_task(self):
        dict_undone = {} # словарь невыполненных дел формат {дата : {дело_1: статус, дело_2: статус...}}
        for i in self.dict_task: # цикл по датам
            for j in self.dict_task[i]: # цикл по делам
                if self.dict_task[i][j] == False: # емли статус невыполенно
                    if dict_undone.get(i) != None: # если есть задачи в dict_undone на выбранную дату
                        dict_undone[i][j] = "не выполненно" # добавляю в словарь
                    else: # если нет задач в dict_undone на выбранную дату
                        dict_undone.update({i: {j: "не выполненно"}}) # добавляю в словарь
        print(f"не выполненные задачи {dict_undone}")

task1 = my_Task() # экземпляр класса

task1.add_task("2024-07-11", "проснуться") #добавил задачу
task1.add_task("2024-07-11", "поесть") #добавил задачу
task1.add_task("2024-07-11", "погулять") #добавил задачу

task1.add_task("2024-07-12", "проснуться") #добавил задачу
task1.add_task("2024-07-12", "поесть") #добавил задачу
task1.add_task("2024-07-12", "попить") #добавил задачу
task1.add_task("2024-07-12", "погулять") #добавил задачу

task1.done_task("2024-07-11","проснуться") #отметил выполнение
task1.done_task("2024-07-11","погулять") #отметил выполнение
task1.done_task("2024-07-12","поесть") #отметил выполнение

task1.list_done_task()  #вывести список выполненных задач
task1.list_undone_task() #вывести список невыполненных задач


